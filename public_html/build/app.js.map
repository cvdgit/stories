{"version":3,"file":"app.js","mappings":";;;;;;;;;;;;;;;;AAAyC;AACU;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kEAAkE;AAClE;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,8DAAY;AAC/C;AACA;AACA;AACA;AACA;AACA,iEAAe,OAAO;;;;;;;;;;;;;;AC5HtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAe,MAAM;;;;;;;;;;;;;;ACnBrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAe,WAAW;;;;;;;;;;;;;;;ACnBc;AACxC;AACA;AACA;AACA;AACA;AACA,+DAA+D,oDAAW;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAe,aAAa;;;;;;;;;;;;;;;AC1BgB;AAC5C;AACA;AACA;AACA;AACA;AACA,kDAAkD,sDAAa;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAe,aAAa;;;;;;;;;;;;;;ACd5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAe,SAAS;;;;;;;;;;;;;;ACXxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAe,YAAY;;;;;;;;;;;AC7F3B;;;;;;;;;;;;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;ACN4B;AACI;AACU;AACQ;AAClD;AACA,oBAAoB,gDAAO,8CAA8C;AACzE;AACA,aAAa,mBAAO,CAAC,4DAAqB;AAC1C,uBAAuB,wDAAS;AAChC,0BAA0B,4DAAa;AACvC,8C","sources":["webpack://wikids/./frontend/js/Testing.js","webpack://wikids/./frontend/js/components/Loader.js","webpack://wikids/./frontend/js/model/AnswerModel.js","webpack://wikids/./frontend/js/model/QuestionModel.js","webpack://wikids/./frontend/js/model/QuestionsData.js","webpack://wikids/./frontend/js/model/TestModel.js","webpack://wikids/./frontend/js/question/BaseQuestion.js","webpack://wikids/./frontend/scss/style.scss","webpack://wikids/webpack/bootstrap","webpack://wikids/webpack/runtime/define property getters","webpack://wikids/webpack/runtime/hasOwnProperty shorthand","webpack://wikids/webpack/runtime/make namespace object","webpack://wikids/./frontend/js/app.js"],"sourcesContent":["import Loader from \"./components/Loader\";\r\nimport BaseQuestion from \"./question/BaseQuestion\";\r\n\r\nclass Testing {\r\n\r\n    dom = {};\r\n    testQuestions = [];\r\n    currentQuestionComp;\r\n\r\n    /**\r\n     *\r\n     * @param element\r\n     * @param options\r\n     */\r\n    constructor(element, options) {\r\n\r\n        if (!(element && element.nodeType && element.nodeType === 1)) {\r\n            throw \"Element must be an HTMLElement, not \".concat({}.toString.call(element));\r\n        }\r\n\r\n        this.element = element;\r\n        this.options = Object.assign({}, options);\r\n\r\n        element['_wikids_test'] = this;\r\n\r\n        //this.currentQuestionComp = {};\r\n    }\r\n\r\n    initialize(testConfig, questionsData) {\r\n\r\n        this.testConfig = testConfig;\r\n        this.questions = questionsData.getQuestions();\r\n\r\n        this.load();\r\n    }\r\n\r\n    makeTestQuestions() {\r\n        let end = false;\r\n        let max = 1; //getQuestionRepeat();\r\n        while (!end && this.testQuestions.length < max) {\r\n            end = this.questions.length === 0;\r\n            if (!end) {\r\n                this.testQuestions.push(this.questions.shift());\r\n            }\r\n        }\r\n    }\r\n\r\n    load() {\r\n\r\n        this.makeTestQuestions();\r\n        this.setupDOM();\r\n        this.start();\r\n        this.addEventListeners();\r\n\r\n        this.element.appendChild(this.dom.wrapper);\r\n    }\r\n\r\n    start() {\r\n\r\n        this.showNextQuestion();\r\n    }\r\n\r\n    setupDOM() {\r\n\r\n        this.dom.header = document.createElement('div');\r\n        this.dom.header.classList.add('wikids-test-header');\r\n\r\n        this.dom.questions = document.createElement('div');\r\n        this.dom.questions.classList.add('wikids-test-questions');\r\n\r\n        this.dom.controls = document.createElement('div');\r\n        this.dom.controls.classList.add('wikids-test-controls');\r\n        const buttonsElement = document.createElement('div');\r\n        buttonsElement.classList.add('wikids-test-buttons');\r\n\r\n        this.dom.nextButton = document.createElement('button');\r\n        this.dom.nextButton.classList.add('btn');\r\n        this.dom.nextButton.classList.add('btn-small');\r\n        this.dom.nextButton.classList.add('btn-test');\r\n        this.dom.nextButton.classList.add('wikids-test-next');\r\n        this.dom.nextButton.textContent = 'Следующий вопрос';\r\n        buttonsElement.appendChild(this.dom.nextButton);\r\n\r\n        this.dom.controls.appendChild(buttonsElement);\r\n\r\n        this.dom.wrapper = document.createElement('div');\r\n        this.dom.wrapper.classList.add('wikids-test');\r\n        this.dom.wrapper.appendChild(this.dom.header);\r\n        this.dom.wrapper.appendChild(this.dom.questions);\r\n        this.dom.wrapper.appendChild(this.dom.controls);\r\n    }\r\n\r\n    addEventListeners() {\r\n        this.dom.nextButton.addEventListener('click', (e) => {\r\n            this.nextQuestion();\r\n        }, false);\r\n    }\r\n\r\n    nextQuestion() {\r\n        console.log(this.currentQuestionComp.getUserAnswers());\r\n    }\r\n\r\n    showNextQuestion() {\r\n\r\n        const currentQuestion = this.testQuestions.shift();\r\n        this.dom.questions.innerHTML = '';\r\n\r\n        const questionComp = this.createQuestion(currentQuestion);\r\n        this.currentQuestionComp = questionComp;\r\n\r\n        this.dom.questions.append(questionComp.render());\r\n    }\r\n\r\n    createQuestion(question) {\r\n\r\n        let questionComp;\r\n        switch (question.getType()) {\r\n            case 0:\r\n                questionComp = new BaseQuestion(question);\r\n        }\r\n        return questionComp;\r\n    }\r\n}\r\n\r\nexport default Testing;","class Loader {\r\n\r\n    constructor(text) {\r\n        this.text = text || 'Загрузка вопросов';\r\n    }\r\n\r\n    render() {\r\n        let elem = document.createElement('div');\r\n        elem.classList.add('wikids-test-loader');\r\n        let textElem = document.createElement('p');\r\n        textElem.textContent = this.text;\r\n        elem.appendChild(textElem);\r\n        let imgElem = document.createElement('img');\r\n        imgElem.setAttribute('src', '/img/loading.gif');\r\n        elem.appendChild(imgElem);\r\n        return elem;\r\n    }\r\n}\r\n\r\nexport default Loader;","class AnswerModel {\r\n\r\n    constructor(data) {\r\n        this.data = data;\r\n    }\r\n\r\n    getId() {\r\n        return parseInt(this.data.id);\r\n    }\r\n\r\n    getName() {\r\n        return this.data.name;\r\n    }\r\n\r\n    isCorrect() {\r\n        return parseInt(this.data.is_correct) === 1;\r\n    }\r\n}\r\n\r\nexport default AnswerModel;","import AnswerModel from \"./AnswerModel\";\r\n\r\nclass QuestionModel {\r\n\r\n    constructor(data, answersPropName) {\r\n        this.data = data;\r\n        this.answers = data[answersPropName].map(answer => new AnswerModel(answer));\r\n    }\r\n\r\n    getId() {\r\n        return parseInt(this.data.id);\r\n    }\r\n\r\n    getName() {\r\n        return this.data.name;\r\n    }\r\n\r\n    getType() {\r\n        return parseInt(this.data.type);\r\n    }\r\n\r\n    getAnswers() {\r\n        return this.answers;\r\n    }\r\n}\r\n\r\nexport default QuestionModel;","import QuestionModel from \"./QuestionModel\";\r\n\r\nclass QuestionsData {\r\n\r\n    constructor(data, answersPropName) {\r\n        this.data = data;\r\n        this.questions = data.map(question => new QuestionModel(question, answersPropName));\r\n    }\r\n\r\n    getQuestions() {\r\n        return this.questions;\r\n    }\r\n}\r\n\r\nexport default QuestionsData;","class TestModel {\r\n\r\n    constructor(data) {\r\n        this.data = data;\r\n    }\r\n\r\n    getId() {\r\n        return parseInt(this.data.id);\r\n    }\r\n}\r\n\r\nexport default TestModel;","class BaseQuestion {\r\n\r\n    constructor(model) {\r\n        this.model = model;\r\n        this.userAnswers = new Set();\r\n    }\r\n\r\n    createAnswer(answer) {\r\n\r\n        const inputElement = document.createElement('input');\r\n        let inputId = 'answer' + answer.getId();\r\n        const singleValue = false;\r\n        inputElement.setAttribute('type', 'checkbox');\r\n        inputElement.setAttribute('id', inputId);\r\n        inputElement.setAttribute('name', 'qwe');\r\n        inputElement.setAttribute('value', answer.getId());\r\n\r\n        const answerElement = document.createElement('div');\r\n        answerElement.classList.add('wikids-test-answer');\r\n        answerElement.addEventListener('click', (e) => {\r\n            let tagName = e.target.tagName;\r\n            let tags = ['INPUT'];\r\n            //if (originalImageExists) {\r\n            //    tags.push('IMG');\r\n            //}\r\n            let input = e.target.querySelector('input');\r\n            if (!tags.includes(tagName)) {\r\n                input.checked = !input.checked;\r\n            }\r\n\r\n            if (singleValue) {\r\n                this.userAnswers.clear();\r\n                this.userAnswers.add(input.value);\r\n            }\r\n            else {\r\n                if (input.checked) {\r\n                    this.userAnswers.add(input.value);\r\n                }\r\n                else {\r\n                    this.userAnswers.delete(input.value);\r\n                }\r\n            }\r\n        }, false);\r\n        answerElement.appendChild(inputElement);\r\n\r\n        const labelElement = document.createElement('label');\r\n        labelElement.setAttribute('for', inputId);\r\n        labelElement.textContent = answer.getName();\r\n        answerElement.appendChild(labelElement);\r\n\r\n        return answerElement;\r\n    }\r\n\r\n    renderAnswers(answers) {\r\n\r\n        const mainElement = document.createElement('div');\r\n        mainElement.innerHTML =\r\n            `<div class=\"row row-no-gutters\">\r\n                 <div class=\"col-md-4 question-image\"></div>\r\n                 <div class=\"col-md-8 question-wrapper\">\r\n                     <div class=\"wikids-test-answers\"></div>\r\n                 </div>\r\n             </div>`;\r\n\r\n        const answersElement = mainElement.querySelector('.wikids-test-answers');\r\n        answers.forEach((answer) => {\r\n            answersElement.appendChild(this.createAnswer(answer));\r\n        });\r\n\r\n        return mainElement;\r\n    }\r\n\r\n    render() {\r\n\r\n        const titleElement = document.createElement('p');\r\n        titleElement.classList.add('question-title');\r\n        titleElement.textContent = this.model.getName();\r\n\r\n        const questionElement = document.createElement('div');\r\n        questionElement.classList.add('wikids-test-question');\r\n        questionElement.setAttribute('data-question-id', this.model.getId());\r\n        questionElement.appendChild(titleElement);\r\n\r\n        questionElement.appendChild(this.renderAnswers(this.model.getAnswers()));\r\n\r\n        return questionElement;\r\n    }\r\n\r\n    getUserAnswers() {\r\n        return Array.from(this.userAnswers);\r\n    }\r\n}\r\n\r\nexport default BaseQuestion;","// extracted by mini-css-extract-plugin\nexport {};","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import \"../scss/style.scss\";\r\nimport Testing from './Testing';\r\nimport TestModel from \"./model/TestModel\";\r\nimport QuestionsData from \"./model/QuestionsData\";\r\n\r\nconst testing = new Testing(document.getElementById('mobile-testing'), {});\r\n\r\nconst data = require('./testing-data.json');\r\nconst testConfig = new TestModel(data[0]['test']);\r\nconst questionsData = new QuestionsData(data[0]['storyTestQuestions'], 'storyTestAnswers');\r\ntesting.initialize(testConfig, questionsData);"],"names":[],"sourceRoot":""}